----QUIT----2024-09-10T13:26:55.620411+02:00 Pharo13.0-SNAPSHOT-64bit-aa90457.image priorSource: 0!----QUIT----2024-09-10T13:26:55.621618+02:00 Pharo13.0-SNAPSHOT-64bit-aa90457.image priorSource: 0!----QUIT----2024-09-10T13:27:33.30689+02:00 Pharo13.0-SNAPSHOT-64bit-aa90457.image priorSource: 101!----QUIT----2024-09-10T13:27:33.30858+02:00 Pharo13.0-SNAPSHOT-64bit-aa90457.image priorSource: 202!!BenchRandom commentStamp: '' prior: 0!I generate random integers in a repeatable way so that our "random" algorithms are repeatable.!!Benchmark commentStamp: '' prior: 0!Benchmark runner and superclassAll benchmarks should be subclasses of this.Run a benchmark doing something like:      `Benchmark` `NBody`It will create an instance of the benchmark and send it an `innerBenchmarkLoop:` message to run the benchmark.The number of runs for that benchmark is the number returned by the class-side method `mainIterations`, which defaults to 10.The number of iterations for that method to run is the number returned by the class-side method `innerIterations`, which defaults to 250,000.A garbage collection is done before the first run, so depending on the benchmark, some variance may come from collection within individual runs.Statistics of execution are printed on the `Transcript`, including mean, standard deviation, and several other usefull values.All the values can be accessed from the run benchmark: `mean`, `stdDev`, `min`, `max`, `firstQuartile`, `median`, `thirdQuartile`, as well as the raw runtimes in `times`.Orginally based on https://github.com/smarr/are-we-fast-yet/blob/master/benchmarks/Smalltalk/Run.som which has the following copyright:Copyright (c) 2011-2016 see AUTHORS.md filePermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the 'Software'), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included inall copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS INTHE SOFTWARE.!!Mandelbrot commentStamp: '' prior: 0!Mandelbrot benchmark!!NBody commentStamp: '' prior: 0!The Computer Language Benchmarks Game  http://shootout.alioth.debian.org/  contributed by Mark C. Lewis  modified slightly by Chad Whipkey    Based on nbody.java ported to SOM by Stefan Marr.  See LICENSE.md file.Ported from SOM at https://github.com/smarr/are-we-fast-yet/tree/master!!Queens commentStamp: '' prior: 0!I implement the classic N-Queens problem!!Body commentStamp: '' prior: 0!The Computer Language Benchmarks Game  http://benchmarksgame.alioth.debian.org/  contributed by Mark C. Lewis  modified slightly by Chad Whipkey    Based on nbody.java ported to SOM by Stefan Marr.  See LICENSE.md file.!!NBodySystem commentStamp: '' prior: 0!The Computer Language Benchmarks Game  http://shootout.alioth.debian.org/  contributed by Mark C. Lewis  modified slightly by Chad Whipkey  Based on nbody.java ported to SOM by Stefan Marr.  See LICENSE.md file.!!ManifestZagBench commentStamp: '' prior: 0!Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!!String methodsFor: '*ZagBench' stamp: '9/10/2024 16:38'!printOrPutOn: aStream	aStream nextPutAll: self! !!Benchmark class methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!allBenchmarks	^ self instanceSide subclasses! !!Benchmark class methodsFor: 'reflective operations' stamp: '9/10/2024 16:38'!benchmark: aString	^ self new initialize: aString! !!Benchmark class methodsFor: 'reflective operations' stamp: '9/10/2024 16:38'!doesNotUnderstand: aMessage	(Smalltalk classNamed: aMessage selector) ifNil: [ ^ super doesNotUnderstand: aMessage ].	^ self run: aMessage selector! !!Benchmark class methodsFor: 'class initialization' stamp: '9/10/2024 16:38'!initialize	ScriptConsole := Transcript! !!Benchmark class methodsFor: 'benchmarking' stamp: '9/10/2024 16:38'!innerIterations	^ 250000! !!Benchmark class methodsFor: 'benchmarking' stamp: '9/10/2024 16:38'!mainIterations	^ 10! !!Benchmark class methodsFor: 'running' stamp: '9/10/2024 16:38'!run	self == Benchmark ifTrue: [		^ self allBenchmarks do: [ : benchmark | self run: benchmark name ] ].	^ self run: name! !!Benchmark class methodsFor: 'reflective operations' stamp: '9/10/2024 16:38'!run: aString	^ (self benchmark: aString) runBenchmark! !!Benchmark methodsFor: 'running' stamp: '9/10/2024 16:38'!doRuns: bench    1 to: mainIterations do: [:i |      self measure: bench    ]! !!Benchmark methodsFor: 'calculating' stamp: '9/10/2024 16:38'!firstQuartile	^ times quartiles first! !!Benchmark methodsFor: 'initialization' stamp: '9/10/2024 16:38'!initialize	super initialize.	logging := false! !!Benchmark methodsFor: 'initialization' stamp: '9/10/2024 16:38'!initialize: aName	name := aName.	benchmarkSuite := self loadBenchmarkSuite: aName.	total := 0.	totalsq := 0.	mainIterations := benchmarkSuite mainIterations.	innerIterations := benchmarkSuite innerIterations.	times := OrderedCollection new! !!Benchmark methodsFor: 'running' stamp: '9/10/2024 16:38'!innerBenchmarkLoop: unreferenced	^ self subclassResponsibility! !!Benchmark methodsFor: 'initialization' stamp: '9/10/2024 16:38'!loadBenchmarkSuite: className    | cls |    cls := Smalltalk classNamed: className.    cls ifNil: [        self error: 'Failed loading benchmark: ', className ].    ^ cls! !!Benchmark methodsFor: 'calculating' stamp: '9/10/2024 16:38'!max	^ times max! !!Benchmark methodsFor: 'calculating' stamp: '9/10/2024 16:38'!mean	^ total // mainIterations! !!Benchmark methodsFor: 'running' stamp: '9/10/2024 16:38'!measure: bench	| startTime endTime runTime |	startTime := Time primUTCMicrosecondsClock.	(bench innerBenchmarkLoop: innerIterations) ifFalse: [		self error: 'Benchmark failed with incorrect result' ].	endTime := Time primUTCMicrosecondsClock.	runTime := endTime - startTime.	logging ifTrue: [self printResult: runTime].	times add: runTime.	totalsq := totalsq + (runTime * runTime).	total := total + runTime! !!Benchmark methodsFor: 'calculating' stamp: '9/10/2024 16:38'!median	^ times quartiles second! !!Benchmark methodsFor: 'calculating' stamp: '9/10/2024 16:38'!min	^ times min! !!Benchmark methodsFor: 'reporting' stamp: '9/10/2024 16:38'!printResult: runTime	ScriptConsole		<<< name;		<<< ': iterations=1 runtime: ';		<<< runTime;		<<< 'us';		cr! !!Benchmark methodsFor: 'reporting' stamp: '9/10/2024 16:38'!printTotal	ScriptConsole		<<< 'Total Runtime: ';		<<< total;		<<< 'us';		cr! !!Benchmark methodsFor: 'reporting' stamp: '9/10/2024 16:38'!reportBenchmark	ScriptConsole		<<< name;		<<< ': n=';		<<< mainIterations;		<<< ' mean: ';		<<< self mean;		<<< 'us stdDev: ';		<<< self stdDev asInteger;		<<< 'us (';		print: self stdDev / self mean * 100 withDecimaPlaces: 1;		<<< '%) min: ';		<<< self min;		<<< 'us 1stQ: ';		<<< self firstQuartile;		<<< 'us ';		<<< ' median: ';		<<< self median;		<<< 'us ';		<<< ' 3rdQ: ';		<<< self thirdQuartile;		<<< 'us ';		<<< ' max: ';		<<< self max;		<<< 'us ';		cr! !!Benchmark methodsFor: 'running' stamp: '9/10/2024 16:38'!runBenchmark	ScriptConsole		println: 'Starting ' , name , ' benchmark ... ';		flush.	WorldMorph doOneCycle.	Smalltalk garbageCollect.	self doRuns: benchmarkSuite new.	self reportBenchmark.	ScriptConsole println: ''! !!Benchmark methodsFor: 'calculating' stamp: '9/10/2024 16:38'!stdDev	^ (totalsq / mainIterations - (total / mainIterations) squared ) sqrt! !!Benchmark methodsFor: 'calculating' stamp: '9/10/2024 16:38'!thirdQuartile	^ times quartiles third! !!Benchmark methodsFor: 'accessing' stamp: '9/10/2024 16:38'!times	^ times asArray! !!Mandelbrot class methodsFor: 'benchmarking' stamp: '9/10/2024 16:38'!innerIterations	^ 750! !!Mandelbrot methodsFor: 'running' stamp: '9/10/2024 16:38'!innerBenchmarkLoop: iterations	^ self		  verify: (self mandelbrot: iterations)		  inner: iterations! !!Mandelbrot methodsFor: 'benchmark' stamp: '9/10/2024 16:38'!mandelbrot: size	| sum byteAcc bitNum y |	sum := 0.	byteAcc := 0.	bitNum := 0.	y := 0.	[ y < size ] whileTrue: [		| ci x |		ci := 2.0 * y / size - 1.0.		x := 0.		[ x < size ] whileTrue: [			| zrzr zi zizi cr escape z notDone |			zrzr := 0.0.			zizi := zi := 0.0.			cr := 2.0 * x / size - 1.5.			z := 0.			notDone := true.			escape := 0.			[ notDone and: [ z < 50 ] ] whileTrue: [				| zr |				zr := zrzr - zizi + cr.				zi := 2.0 * zr * zi + ci.				"preserve recalculation"				zrzr := zr * zr.				zizi := zi * zi.				zrzr + zizi > 4.0 ifTrue: [					notDone := false.					escape := 1 ].				z := z + 1 ].			byteAcc := byteAcc << 1 + escape.			bitNum := bitNum + 1.			" Code is very similar for these cases, but using separate blocks                ensures we skip the shifting when it's unnecessary,                which is most cases. "			bitNum = 8				ifTrue: [					sum := sum bitXor: byteAcc.					byteAcc := 0.					bitNum := 0 ]				ifFalse: [					x = (size - 1) ifTrue: [						byteAcc := byteAcc << (8 - bitNum).						sum := sum bitXor: byteAcc.						byteAcc := 0.						bitNum := 0 ] ].			x := x + 1 ].		y := y + 1 ].	^ sum! !!Mandelbrot methodsFor: 'validating existence' stamp: '9/10/2024 16:38'!verify: result inner: iterations	iterations = 500 ifTrue: [ ^ result = 191 ].	iterations = 750 ifTrue: [ ^ result = 50 ].	iterations = 1 ifTrue: [ ^ result = 128 ].	ScriptConsole println:		'No verification result for ' , iterations asString , ' found'.	ScriptConsole println: 'Result is: ' , result asString.	^ false! !!NBody class methodsFor: 'instance creation' stamp: '9/10/2024 16:38'!new	Body initialize.   ^ super new! !!NBody methodsFor: 'running' stamp: '9/10/2024 16:38'!innerBenchmarkLoop: iterations	| system |	system := NBodySystem new.	1 to: iterations do: [ :i | system advance: 0.01 ].	^ self verify: system energy for: iterations! !!NBody methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!verify: result for: innerIterations    innerIterations = 250000 ifTrue: [ ^ result = -0.1690859889909308  ].    innerIterations =      1 ifTrue: [ ^ result = -0.16907495402506745 ].    ('No verification result for ', innerIterations asString, ' found') println.    ('Result is: ', result asString) println.    ^ false! !!Queens class methodsFor: 'benchmarking' stamp: '9/10/2024 16:38'!innerIterations	^ 30000! !!Queens methodsFor: 'running' stamp: '9/10/2024 16:38'!innerBenchmarkLoop: iterations	| result |	result := true.	1 to: iterations do: [ :i | result := result and: self queens ].	^ result! !!Queens methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!placeQueen: c    1 to: 8 do: [ :r |       (self row: r column: c)        ifTrue: [          queenRows at: r put: c.          self row: r column: c put: false.          (c = 8) ifTrue: [ ^ true ].          (self placeQueen: c + 1) ifTrue: [ ^ true ].          self row: r column: c put: true ] ].    ^ false! !!Queens methodsFor: 'initialization' stamp: '9/10/2024 16:38'!queens	freeRows := Array new: 8 withAll: true.	freeMaxs := Array new: 16 withAll: true.	freeMins := Array new: 16 withAll: true.	queenRows := Array new: 8 withAll: -1.	^ self placeQueen: 1! !!Queens methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!row: r column: c    ^ (freeRows at: r) and: [(freeMaxs at: c + r) and: [(freeMins at: c - r + 8)]]! !!Queens methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!row: r column: c put: v    freeRows at: r         put: v.    freeMaxs at: c + r     put: v.    freeMins at: c - r + 8 put: v.! !!Body class methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!DaysPerYear	^ 365.24! !!Body class methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!Pi	^ 3.141592653589793! !!Body class methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!SolarMass	^ solarMass! !!Body class methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!initialize	solarMass := 4 * self Pi * self Pi! !!Body class methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!jupiter     ^ self new         initX:    4.8414314424647209             y:   -1.16032004402742839             z:   -0.103622044471123109             vx:   0.00166007664274403694             vy:   0.00769901118419740425             vz:  -0.0000690460016972063023             mass: 0.000954791938424326609! !!Body class methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!neptune    ^ self new        initX:   15.3796971148509165            y:  -25.9193146099879641            z:    0.179258772950371181            vx:   0.00268067772490389322            vy:   0.00162824170038242295            vz:  -0.000095159225451971587            mass: 0.0000515138902046611451! !!Body class methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!saturn    ^ self new        initX:    8.34336671824457987            y:    4.12479856412430479            z:   -0.403523417114321381            vx:  -0.00276742510726862411            vy:   0.00499852801234917238            vz:   0.0000230417297573763929            mass: 0.000285885980666130812! !!Body class methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!sun    ^ self new initX: 0.0 y: 0.0 z: 0.0 vx: 0.0 vy: 0.0 vz: 0.0 mass: 1.0! !!Body class methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!uranus    ^ self new        initX:   12.894369562139131            y:  -15.1111514016986312            z:   -0.223307578892655734            vx:   0.00296460137564761618            vy:   0.0023784717395948095            vz:  -0.0000296589568540237556            mass: 0.0000436624404335156298! !!Body methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!initX: anX y: aY z: aZ vx: aVX vy: aVY vz: aVZ mass: aMass    x := anX.    y := aY.    z := aZ.    vx := aVX * Body DaysPerYear.    vy := aVY * Body DaysPerYear.    vz := aVZ * Body DaysPerYear.    mass := aMass * Body SolarMass! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!mass	^ mass! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!mass: anObject	mass := anObject! !!Body methodsFor: 'as yet unclassified' stamp: '9/10/2024 16:38'!offsetMomentumX: px y: py z: pz    vx := 0.0 - (px / Body SolarMass).    vy := 0.0 - (py / Body SolarMass).    vz := 0.0 - (pz / Body SolarMass)! !!Body methodsFor: 'printing' stamp: '9/10/2024 16:38'!print    'x:  ' print. x println.    'y:  ' print. y println.    'z:  ' print. z println.        'vx: ' print. vx println.    'vy: ' print. vy println.    'vz: ' print. vz println.        'mass: ' print. mass println! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!vx	^ vx! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!vx: anObject	vx := anObject! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!vy	^ vy! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!vy: anObject	vy := anObject! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!vz	^ vz! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!vz: anObject	vz := anObject! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!x	^ x! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!x: anObject	x := anObject! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!y	^ y! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!y: anObject	y := anObject! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!z	^ z! !!Body methodsFor: 'accessing' stamp: '9/10/2024 16:38'!z: anObject	z := anObject! !!NBodySystem methodsFor: 'initialization' stamp: '9/10/2024 16:38'!advance: dt    1 to: bodies size do: [:i |      | iBody |      iBody := bodies at: i.      i + 1 to: bodies size do: [:j |        | dx dy dz jBody dSquared distance mag |        jBody := bodies at: j.        dx := iBody x - jBody x.        dy := iBody y - jBody y.        dz := iBody z - jBody z.        dSquared := (dx * dx) + (dy * dy) + (dz * dz).        distance := dSquared sqrt.        mag      := dt / (dSquared * distance).        iBody vx: iBody vx - (dx * jBody mass * mag).        iBody vy: iBody vy - (dy * jBody mass * mag).        iBody vz: iBody vz - (dz * jBody mass * mag).        jBody vx: jBody vx + (dx * iBody mass * mag).        jBody vy: jBody vy + (dy * iBody mass * mag).        jBody vz: jBody vz + (dz * iBody mass * mag).      ].    ].    bodies do: [:body |       body x: body x + (dt * body vx).       body y: body y + (dt * body vy).       body z: body z + (dt * body vz).    ]! !!NBodySystem methodsFor: 'initialization' stamp: '9/10/2024 16:38'!createBodies    | px py pz |    bodies := Array new: 5.    bodies at: 1 put: Body sun.    bodies at: 2 put: Body jupiter.    bodies at: 3 put: Body saturn.    bodies at: 4 put: Body uranus.    bodies at: 5 put: Body neptune.    "bodies do: [:b | b print. '' println ]."    px := 0.0.  py := 0.0.  pz := 0.0.    bodies do: [:b |        px := px + (b vx * b mass).        py := py + (b vy * b mass).        pz := pz + (b vz * b mass).    ].    (bodies at: 1) offsetMomentumX: px y: py z: pz.    "bodies do: [:b | b print. '' println ]."! !!NBodySystem methodsFor: 'initialization' stamp: '9/10/2024 16:38'!energy    | e |    e := 0.0.    1 to: bodies size do: [:i |      | iBody |      iBody := bodies at: i.      e := e + (0.5 * iBody mass *           ((iBody vx * iBody vx) +            (iBody vy * iBody vy) +            (iBody vz * iBody vz))).      i + 1 to: bodies size do: [:j |          | jBody dx dy dz distance |          jBody := bodies at: j.          dx := iBody x - jBody x.          dy := iBody y - jBody y.          dz := iBody z - jBody z.          distance := ((dx*dx) + (dy*dy) + (dz*dz)) sqrt.          e := e - ((iBody mass * jBody mass) / distance).      ].    ].    ^ e! !!NBodySystem methodsFor: 'initialization' stamp: '9/10/2024 16:38'!initialize    self createBodies! !!Object methodsFor: '*ZagBench' stamp: '9/10/2024 16:38'!printOrPutOn: aStream	self printOn: aStream! !!ThreadSafeTranscript methodsFor: '*ZagBench' stamp: '9/10/2024 16:38'!<<< anObject	anObject printOrPutOn: self! !!ThreadSafeTranscript methodsFor: '*ZagBench' stamp: '9/10/2024 16:38'!print: aNumber withDecimaPlaces: anInteger	aNumber printOn: self showingDecimalPlaces: anInteger! !!ThreadSafeTranscript methodsFor: '*ZagBench' stamp: '9/10/2024 16:38'!println: aString 	self show: aString;cr! !!ManifestZagBench class methodsFor: 'code-critics' stamp: '9/10/2024 16:38'!ruleClassNotReferencedRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGPackageDefinition #(#ZagBench)) #'2024-09-10T15:18:28.185408-04:00') )! !!ManifestZagBench class methodsFor: 'code-critics' stamp: '9/10/2024 16:38'!ruleLongMethodsRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGPackageDefinition #(#ZagBench)) #'2024-07-31T13:53:20.583848-04:00') )! !!ManifestZagBench class methodsFor: 'code-critics' stamp: '9/10/2024 16:38'!ruleReCyclomaticComplexityRuleV1FalsePositive	<ignoreForCoverage>	^ #( #( #( #RGPackageDefinition #( #ZagBench ) )	        #'2024-09-10T15:01:12.769636-04:00' ) )! !!ManifestZagBench class methodsFor: 'code-critics' stamp: '9/10/2024 16:38'!ruleRefersToClassRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGMethodDefinition #(#'Benchmark class' #run #true)) #'2024-08-01T09:49:37.471071-04:00') )! !!ManifestZagBench class methodsFor: 'code-critics' stamp: '9/10/2024 16:38'!ruleWhileTrueRuleV1FalsePositive	<ignoreForCoverage>	^ #( #( #( #RGPackageDefinition #( #ZagBench ) )	        #'2024-09-10T15:01:22.027308-04:00' ) )! !"ZagBench"!----SNAPSHOT----2024-09-10T16:39:01.124-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 304!----SNAPSHOT----2024-09-10T16:39:01.137-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 20803!!NBodySystem methodsFor: 'initialization' stamp: '9/10/2024 16:39' prior: 38141!initialize    self createBodies"testing"! !----SNAPSHOT----2024-09-10T16:41:23.26-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 20923!----SNAPSHOT----2024-09-10T16:41:23.272-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 21173!!NBodySystem methodsFor: 'initialization' stamp: '9/12/2024 07:04' prior: 42255!initialize    self createBodies"testing"! !----QUIT----2024-09-12T07:04:07.642-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 21294!----QUIT----2024-09-12T07:04:07.668-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 21544!----QUIT----2024-09-20T17:11:28.762-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 21662!----QUIT----2024-09-20T17:11:28.772-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 21780!----QUIT/NOSAVE----2024-09-20T17:11:42.845-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 21898!----QUIT/NOSAVE----2024-09-20T17:11:42.856-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 21898!Object << #ArrayReversal	slots: {};	sharedVariables: {};	package: 'ZagBench'!!ArrayReversal methodsFor: 'nil' stamp: '9/20/2024 17:28'!methodSelectorAndArgumentNames	"generate random array"		| rolls NHBDice|	rolls := (1 to: 1000) collect: [ :i | NHBDice n: 1 d: 4 ]! !!UndefinedObject methodsFor: 'nil' stamp: '9/20/2024 17:30'!n: anInteger d: anInteger2 	self shouldBeImplemented.! !!ArrayReversal methodsFor: 'as yet unclassified' stamp: '9/20/2024 18:06' prior: 44817!methodSelectorAndArgumentNames	"generate random array"		| rolls |	rolls := (1 to: 1000) collect: [ :i | NHBDice n: 1 d: 4 ]! !Object << #ArrayReversal	slots: {};	sharedVariables: { #rolls };	package: 'ZagBench'!Object << #RandomArray	slots: {};	sharedVariables: {};	tag: #RandomArray;	package: 'ZagBench'!!RandomArray methodsFor: 'nil' stamp: '9/26/2024 02:48'!methodSelectorAndArgumentNames	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random |random := Random new.^ (1 to: 10) collect: [ :i |    (1 to: 8) collect: [ :j |      random next ] ].! !!ManifestZagBench class methodsFor: 'code-critics' stamp: '9/26/2024 02:48'!ruleUnclassifiedMethodsRuleV1FalsePositive	<ignoreForCoverage>	^ #()! !!ManifestZagBench class methodsFor: 'code-critics' stamp: '9/26/2024 02:48' prior: 46919!ruleUnclassifiedMethodsRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGClassDefinition #(#RandomArray)) #'2024-09-26T02:48:41.894-04:00') )! !----QUIT/NOSAVE----2024-09-26T04:20:21.845-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 21898!----QUIT/NOSAVE----2024-09-26T04:20:21.858-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 21898!Object << #RandomArray	slots: {};	sharedVariables: {};	tag: #RandomArray;	package: 'ZagBench'!!RandomArray methodsFor: 'nil' stamp: '9/26/2024 12:01'!RandomMatrix	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random rows columns |	random := Random new.	^ GMatrix	  rows: rowNumber	  columns: columnNumber	  tabulate: [ :i :j | random next ]! !!RandomArray methodsFor: 'as yet unclassified' stamp: '9/26/2024 14:29' prior: 48361!RandomMatrix	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random rows columns |	random := Random new.	^ GMatrix		  rows: 10		  columns: 6		  tabulate: [ :i :j | random next ]! !!RandomArray methodsFor: 'nil' stamp: '9/26/2024 14:33'!methodSelectorAndArgumentNames	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random |random := Random new.^ Array   rows: 10   columns: 6   tabulate: [ :i :j | random next ]! !!RandomArray methodsFor: 'as yet unclassified' stamp: '9/26/2024 14:34'!RandomArray	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random |	random := Random new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]! !RandomArray removeSelector: #RandomMatrix!!RandomArray methodsFor: 'as yet unclassified' stamp: '9/26/2024 14:56'!RandomMatrix 	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random |	random := Random new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]! !RandomArray removeSelector: #RandomArray!!RandomArray methodsFor: 'as yet unclassified' stamp: '9/26/2024 14:59' prior: 50939!RandomMatrix 	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random |	random := Random new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]! !!RandomArray methodsFor: 'as yet unclassified' stamp: '9/26/2024 15:08' prior: 51631!RandomMatrix 	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random |	random := Random new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ].! !!RandomArray methodsFor: 'as yet unclassified' stamp: '9/26/2024 15:16' prior: 52237!RandomMatrix 	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random |	random := Random new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]! !!RandomArray methodsFor: 'as yet unclassified' stamp: '9/26/2024 15:18' prior: 52845!RandomMatrix 	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random |	random := Random new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ].! !!RandomArray methodsFor: 'as yet unclassified' stamp: '9/26/2024 15:29' prior: 53451!RandomMatrix 	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	"| random |	random := Random new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]. "	| random |random := Random new.^ (1 to: 10) collect: [ :i |    (1 to: 8) collect: [ :j |      random next ]].! !!RandomArray methodsFor: 'initialization' stamp: '9/26/2024 16:15'!randomMatrix	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	"| random |	random := Random new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]. "	| random |	random := Random new.	^ (1 to: 10) collect: [ :i | (1 to: 8) collect: [ :j | random next ] ].! !RandomArray removeSelector: #RandomMatrix!!RandomArray methodsFor: 'initialization' stamp: '9/26/2024 16:21'!randomMatrix: size	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	"| random |	random := Random new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]. "	| random |	random := Random new.	^ (1 to: size) collect: [ :i | (1 to: size) collect: [ :j | random next ] ]! !RandomArray removeSelector: #randomMatrix!(Smalltalk globals at: #RandomArray) rename: #RandomMatrix!!RandomMatrix methodsFor: 'initialization' stamp: '9/26/2024 16:29'!rows: rows columns: cols	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random |	random := Random new.	matrix := (1 to: rows) collect: [ :i |		          (1 to: cols) collect: [ :j | random next ] ]! !RandomMatrix removeSelector: #randomMatrix:!!RandomMatrix methodsFor: 'initialization' stamp: '9/26/2024 16:30'!randomWithRows: rows columns: cols	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random |	random := Random new.	matrix := (1 to: rows) collect: [ :i |		          (1 to: cols) collect: [ :j | random next ] ]! !RandomMatrix removeSelector: #rows:columns:!!RandomMatrix methodsFor: 'nil' stamp: '9/26/2024 16:31'!randomSquare: anInteger 	self shouldBeImplemented.! !!RandomMatrix methodsFor: 'as yet unclassified' stamp: '9/26/2024 16:32' prior: 58283!randomSquare: anInteger 	^ self randomWithRows: anInteger columns: anInteger! !!RandomMatrix methodsFor: 'nil' stamp: '9/26/2024 16:34'!makeInvertable	self shouldBeImplemented.! !!RandomMatrix methodsFor: 'as yet unclassified' stamp: '9/26/2024 16:39' prior: 58845!makeInvertable	matrix withIndexDo: [ : row : index |  row at: index put: (row inject: 0 into: [ : sum : each | sum + each abs] )]! !----SNAPSHOT----2024-09-26T16:41:37.928-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 21898!----SNAPSHOT----2024-09-26T16:41:37.945-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 29688!----SNAPSHOT----2024-10-09T14:35:40.623-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 29810!----SNAPSHOT----2024-10-09T14:35:40.637-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 29932!----SNAPSHOT----2024-10-09T14:35:41.688-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 30054!----SNAPSHOT----2024-10-09T14:35:41.7-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 30176!----SNAPSHOT----2024-10-09T14:35:51.228-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 30298!----SNAPSHOT----2024-10-09T14:35:51.241-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 30418!----SNAPSHOT----2024-10-09T14:35:51.984-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 30540!----SNAPSHOT----2024-10-09T14:35:51.996-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 30662!----SNAPSHOT----2024-10-09T14:35:57.21-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 30784!----SNAPSHOT----2024-10-09T14:35:57.229-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 30906!----SNAPSHOT----2024-10-09T14:35:57.409-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 31027!----SNAPSHOT----2024-10-09T14:35:57.419-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 31149!----SNAPSHOT----2024-10-09T14:35:57.658-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 31271!----SNAPSHOT----2024-10-09T14:35:57.669-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 31393!!RandomMatrix methodsFor: 'as yet unclassified' stamp: '10/9/2024 16:50'!CreateRowsandColumns	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random |	random := Random new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]! !!RandomMatrix methodsFor: 'nil' stamp: '10/9/2024 16:50'!LinearCongruentionalGenerator 	| randomArray size seed a c m currentValue |size := 10. "Define the size of the array"seed := 12345. "Choose an initial seed value"a := 1103515245. "Multiplier constant"c := 12345. "Increment constant"m := 2 raisedTo: 31. "Modulus (this value is usually large)"randomArray := OrderedCollection new. "Create an empty collection to store random numbers"currentValue := seed. "Set the initial value to the seed"1 to: size do: [:i |     currentValue := ((a * currentValue + c) \\ m). "Linear congruential generator formula"    randomArray add: (currentValue / m * 100). "Scale the result to a range between 0 and 100"].^ randomArray asArray. "Return the array"! !----SNAPSHOT----2024-10-09T16:54:09.236-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 31515!----SNAPSHOT----2024-10-09T16:54:09.259-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 32702!RandomMatrix removeSelector: #methodSelectorAndArgumentNames!!RandomMatrix methodsFor: 'as yet unclassified' stamp: '10/9/2024 17:29' prior: 63989!LinearCongruentionalGenerator	| randomArray size seed a c m currentValue |	size := 10. "Define the size of the array"	seed := 12345. "Choose an initial seed value"	a := 1103515245. "Multiplier constant"	c := 12345. "Increment constant"	m := 2 raisedTo: 31. "Modulus (this value is usually large)"	randomArray := OrderedCollection new. "Create an empty collection to store random numbers"	currentValue := seed. "Set the initial value to the seed"	1 to: size do: [ :i |		currentValue := a * currentValue + c \\ m. "Linear congruential generator formula"		randomArray add: currentValue / m * 100 "Scale the result to a range between 0 and 100" ].	^ randomArray asArray "Return the array"! !!UndefinedObject methodsFor: 'nil' stamp: '10/9/2024 17:33'!asArray	self shouldBeImplemented.! !!StDebuggerContextInteractionModel methodsFor: 'nil' stamp: '10/9/2024 17:35'!correctFrom: anInteger to: anInteger2 with: aString 	self shouldBeImplemented.! !----SNAPSHOT----2024-10-10T01:52:51.405-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 32824!----SNAPSHOT----2024-10-10T01:52:51.428-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 34060!----SNAPSHOT----2024-10-10T01:52:51.898-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 34182!----SNAPSHOT----2024-10-10T01:52:51.909-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 34304!----SNAPSHOT----2024-10-10T01:52:52.119-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 34426!----SNAPSHOT----2024-10-10T01:52:52.131-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 34548!----SNAPSHOT----2024-10-10T01:52:52.327-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 34670!----SNAPSHOT----2024-10-10T01:52:52.337-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 34792!----SNAPSHOT----2024-10-10T01:52:52.545-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 34914!----SNAPSHOT----2024-10-10T01:52:52.554-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 35036!----SNAPSHOT----2024-10-10T01:52:52.751-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 35158!----SNAPSHOT----2024-10-10T01:52:52.761-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 35280!----SNAPSHOT----2024-10-10T01:52:52.962-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 35402!----SNAPSHOT----2024-10-10T01:52:52.972-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 35524!----SNAPSHOT----2024-10-10T01:52:53.168-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 35646!----SNAPSHOT----2024-10-10T01:52:53.18-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 35768!----SNAPSHOT----2024-10-10T01:52:53.375-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 35890!----SNAPSHOT----2024-10-10T01:52:53.384-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 36011!----SNAPSHOT----2024-10-10T01:52:53.583-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 36133!----SNAPSHOT----2024-10-10T01:52:53.595-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 36255!----SNAPSHOT----2024-10-10T01:52:53.789-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 36377!----SNAPSHOT----2024-10-10T01:52:53.8-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 36499!----SNAPSHOT----2024-10-10T01:52:53.997-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 36621!----SNAPSHOT----2024-10-10T01:52:54.007-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 36741!----SNAPSHOT----2024-10-10T01:52:54.219-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 36863!----SNAPSHOT----2024-10-10T01:52:54.229-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 36985!----SNAPSHOT----2024-10-10T01:52:54.424-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 37107!----SNAPSHOT----2024-10-10T01:52:54.435-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 37229!----SNAPSHOT----2024-10-10T02:12:10.676-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 37351!----SNAPSHOT----2024-10-10T02:12:10.689-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 37473!----QUIT----2024-10-10T02:12:21.758-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 37595!----QUIT----2024-10-10T02:12:21.768-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 37717!----SNAPSHOT----2024-10-10T17:31:34.739-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 37835!----SNAPSHOT----2024-10-10T17:31:34.753-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 37953!----SNAPSHOT----2024-10-10T17:31:46.146-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 38075!----SNAPSHOT----2024-10-10T17:31:46.161-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 38197!----SNAPSHOT----2024-10-10T18:02:14.063-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 38319!----SNAPSHOT----2024-10-10T18:02:14.081-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 38441!----SNAPSHOT----2024-10-10T18:02:16.893-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 38563!----SNAPSHOT----2024-10-10T18:02:16.916-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 38685!!RandomMatrix methodsFor: 'generate' stamp: '10/14/2024 01:52'!lcg	"|lcg |	lcg := BenchRandom new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]"	| randomArray size seed a c m currentValue rand|	size := 10. "Define the size of the array"	seed := 12345. "Choose an initial seed value"	a := 1103515245. "Multiplier constant"	c := 12345. "Increment constant"	m := 2 raisedTo: 31. "Modulus "	randomArray := OrderedCollection new. "Create an empty collection to store random numbers"	currentValue := seed. "Set the initial value to the seed"	1 to: size do: [ :i |		currentValue := a * currentValue + c \\ m. "Linear congruential generator formula"		randomArray add: currentValue / m * 100 "Scale the result to a range between 0 and 100" ].BenchRandom new LinearCongruentionalGenerator .rand := BenchRandom between: 0 and: 100.(1 to: 10) collect: [ : ignore | rand nextFloat ] .	^ randomArray asArray "Return the array"! !----SNAPSHOT----2024-10-14T01:52:15.171-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 38807!----SNAPSHOT----2024-10-14T01:52:15.187-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 39886!----SNAPSHOT----2024-10-14T01:52:15.685-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 40008!----SNAPSHOT----2024-10-14T01:52:15.695-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 40130!----SNAPSHOT----2024-10-14T01:52:15.896-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 40252!----SNAPSHOT----2024-10-14T01:52:15.905-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 40374!----SNAPSHOT----2024-10-14T01:52:16.086-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 40496!----SNAPSHOT----2024-10-14T01:52:16.095-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 40618!----SNAPSHOT----2024-10-14T01:52:52.646-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 40740!----SNAPSHOT----2024-10-14T01:52:52.661-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 40862!----SNAPSHOT----2024-10-15T14:04:33.605-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 40984!----SNAPSHOT----2024-10-15T14:04:33.617-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 41106!----SNAPSHOT----2024-10-15T14:04:48.309-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 41228!----SNAPSHOT----2024-10-15T14:04:48.319-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 41350!----SNAPSHOT----2024-10-15T14:04:55.868-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 41472!----SNAPSHOT----2024-10-15T14:04:55.88-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 41594!----SNAPSHOT----2024-10-15T14:05:09.884-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 41716!----SNAPSHOT----2024-10-15T14:05:09.894-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 41837!----SNAPSHOT----2024-10-15T14:05:17.508-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 41959!----SNAPSHOT----2024-10-15T14:05:17.521-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 42081!----SNAPSHOT----2024-10-15T14:05:29.374-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 42203!----SNAPSHOT----2024-10-15T14:05:29.386-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 42325!----SNAPSHOT----2024-10-15T14:05:33.136-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 42447!----SNAPSHOT----2024-10-15T14:05:33.148-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 42569!----SNAPSHOT----2024-10-15T14:05:36.56-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 42691!----SNAPSHOT----2024-10-15T14:05:36.571-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 42813!----SNAPSHOT----2024-10-15T14:05:40.868-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 42934!----SNAPSHOT----2024-10-15T14:05:40.879-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 43056!----SNAPSHOT----2024-10-15T14:05:45.174-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 43178!----SNAPSHOT----2024-10-15T14:05:45.189-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 43300!----SNAPSHOT----2024-10-15T14:05:54.079-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 43422!----SNAPSHOT----2024-10-15T14:05:54.093-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 43544!----QUIT----2024-10-15T14:07:18.372-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 43666!----QUIT----2024-10-15T14:07:18.384-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 43788!!RandomMatrix methodsFor: 'generate' stamp: '10/28/2024 01:50'!Lcg	"|lcg |	lcg := BenchRandom new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]"	| randomArray size seed a c m currentValue rand |	size := 10. "Define the size of the array"	seed := 12345. "Choose an initial seed value"	a := 1103515245. "Multiplier constant"	c := 12345. "Increment constant"	m := 2 raisedTo: 31. "Modulus "	randomArray := OrderedCollection new. "Create an empty collection to store random numbers"	currentValue := seed. "Set the initial value to the seed"	1 to: size do: [ :i |		currentValue := a * currentValue + c \\ m. "Linear congruential generator formula"		randomArray add: currentValue / m * 100 "Scale the result to a range between 0 and 100" ].	BenchRandom new LinearCongruentionalGenerator.	rand := BenchRandom between: 0 and: 100.	(1 to: 10) collect: [ :ignore | rand nextFloat ].	^ randomArray asArray "Return the array"! !----SNAPSHOT----2024-11-06T02:23:49.113-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 43906!----SNAPSHOT----2024-11-06T02:23:49.132-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 44981!----SNAPSHOT----2024-11-06T02:24:01.919-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 45103!----SNAPSHOT----2024-11-06T02:24:01.934-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 45225!----SNAPSHOT----2024-11-06T02:24:08.15-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 45347!----SNAPSHOT----2024-11-06T02:24:08.166-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 45469!----SNAPSHOT----2024-11-06T02:24:11.29-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 45590!----SNAPSHOT----2024-11-06T02:24:11.304-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 45712!----SNAPSHOT----2024-11-06T02:24:15.427-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 45833!----SNAPSHOT----2024-11-06T02:24:15.443-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 45955!----SNAPSHOT----2024-11-06T02:24:18.943-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 46077!----SNAPSHOT----2024-11-06T02:24:18.959-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 46199!----SNAPSHOT----2024-11-06T02:24:21.641-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 46321!----SNAPSHOT----2024-11-06T02:24:21.659-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 46443!----SNAPSHOT----2024-11-06T02:24:25.109-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 46565!----SNAPSHOT----2024-11-06T02:24:25.124-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 46687!----QUIT----2024-11-06T02:25:07.718-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 46809!----QUIT----2024-11-06T02:25:07.733-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 46931!Object << #RandomMatrix	slots: { #matrix };	tag: 'RandomArray','LinearCongruentialGenerator';	package: 'ZagBench'!----SNAPSHOT----2024-11-06T20:21:44.966-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 47049!----SNAPSHOT----2024-11-06T20:21:44.983-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 47286!----SNAPSHOT----2024-11-06T20:24:08.704-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 47408!----SNAPSHOT----2024-11-06T20:24:08.716-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 47530!----SNAPSHOT----2024-11-06T20:25:41.648-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 47652!----SNAPSHOT----2024-11-06T20:25:41.675-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 47774!----SNAPSHOT----2024-11-06T20:27:36.685-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 47896!----SNAPSHOT----2024-11-06T20:27:36.7-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 48018!----SNAPSHOT----2024-11-06T20:30:21.132-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 48140!----SNAPSHOT----2024-11-06T20:30:21.154-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 48260!!RandomMatrix methodsFor: 'generate' stamp: '11/6/2024 20:30'!LcgFloat	"|lcg |	lcg := BenchRandom new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]"	| randomArray size seed a c m currentValue rand|	size := 10. "Define the size of the array"	seed := 12345. "Choose an initial seed value"	a := 1103515245. "Multiplier constant"	c := 12345. "Increment constant"	m := 2 raisedTo: 31. "Modulus "	randomArray := OrderedCollection new. "Create an empty collection to store random numbers"	currentValue := seed. "Set the initial value to the seed"	1 to: size do: [ :i |		currentValue := a * currentValue + c \\ m. "Linear congruential generator formula"		randomArray add: currentValue / m * 100 "Scale the result to a range between 0 and 100" ].BenchRandom new LinearCongruentionalGenerator .rand := BenchRandom between: 0 and: 100.(1 to: 10) collect: [ : ignore | rand nextFloat ] .	^ randomArray asArray "Return the array"! !RandomMatrix removeSelector: #lcg!----SNAPSHOT----2024-11-06T20:48:50.748-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 48382!----SNAPSHOT----2024-11-06T20:48:50.768-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 49501!----QUIT----2024-11-07T10:26:11.696-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 49623!----QUIT----2024-11-07T10:26:11.712-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 49745!Object << #LcgFloat	layout: FixedLayout;	traits: {};	slots: {};	sharedVariables: {};	sharedPools: {};	tag: 'Objects' ;	package: 'Kernel'!----SNAPSHOT----2024-11-08T17:10:10.926-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 49863!----SNAPSHOT----2024-11-08T17:10:10.941-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 50127!----SNAPSHOT----2024-11-08T17:11:29.735-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 50249!----SNAPSHOT----2024-11-08T17:11:29.751-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 50371!----SNAPSHOT----2024-11-08T17:12:27.842-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 50493!----SNAPSHOT----2024-11-08T17:12:27.857-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 50615!----SNAPSHOT----2024-11-08T17:12:29.149-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 50737!----SNAPSHOT----2024-11-08T17:12:29.165-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 50859!----SNAPSHOT----2024-11-08T17:14:17.096-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 50981!----SNAPSHOT----2024-11-08T17:14:17.109-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 51103!----SNAPSHOT----2024-11-08T17:14:17.609-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 51225!----SNAPSHOT----2024-11-08T17:14:17.624-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 51347!----SNAPSHOT----2024-11-08T17:14:17.821-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 51469!----SNAPSHOT----2024-11-08T17:14:17.832-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 51591!----SNAPSHOT----2024-11-08T17:33:41.875-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 51713!----SNAPSHOT----2024-11-08T17:33:41.888-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 51835!----SNAPSHOT----2024-11-08T17:33:44.359-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 51957!----SNAPSHOT----2024-11-08T17:33:44.369-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 52079!----SNAPSHOT----2024-11-08T17:33:54.543-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 52201!----SNAPSHOT----2024-11-08T17:33:54.556-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 52323!----SNAPSHOT----2024-11-08T17:33:57.525-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 52445!----SNAPSHOT----2024-11-08T17:33:57.539-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 52567!----SNAPSHOT----2024-11-08T17:34:01.027-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 52689!----SNAPSHOT----2024-11-08T17:34:01.043-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 52811!----QUIT----2024-11-08T17:34:12.237-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 52933!----QUIT----2024-11-08T17:34:12.249-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 53055!----QUIT----2024-12-07T01:15:06.204-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 53173!----QUIT----2024-12-07T01:15:06.221-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 53291!----QUIT/NOSAVE----2024-12-11T16:26:33.148-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 53409!----QUIT/NOSAVE----2024-12-11T16:26:33.177-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 53409!----QUIT/NOSAVE----2024-12-13T02:51:57.712-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 53409!----QUIT/NOSAVE----2024-12-13T02:51:57.728-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 53409!----QUIT/NOSAVE----2024-12-15T01:12:03.747-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 53409!----QUIT/NOSAVE----2024-12-15T01:12:03.764-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 53409!----SNAPSHOT----2024-12-16T21:10:54.34-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 53409!----SNAPSHOT----2024-12-16T21:10:54.375-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54277!----QUIT/NOSAVE----2024-12-20T22:41:20.636-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54398!----QUIT/NOSAVE----2024-12-20T22:41:20.656-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54398!----QUIT/NOSAVE----2024-12-21T00:39:27.355-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54398!----QUIT/NOSAVE----2024-12-21T00:39:27.368-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54398!----QUIT/NOSAVE----2025-01-14T21:12:02.898-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54398!----QUIT/NOSAVE----2025-01-14T21:12:02.917-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54398!----QUIT/NOSAVE----2025-01-14T21:15:28.42-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54398!----QUIT/NOSAVE----2025-01-14T21:15:28.433-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54398!----QUIT/NOSAVE----2025-01-14T21:15:55.526-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54398!----QUIT/NOSAVE----2025-01-14T21:15:55.54-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54398!----QUIT/NOSAVE----2025-01-14T21:36:36.216-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54398!----QUIT/NOSAVE----2025-01-14T21:36:36.229-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54398!----QUIT----2025-02-06T03:49:56.984-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 54398!----QUIT----2025-02-06T03:49:56.996-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 56018!----QUIT----2025-02-09T02:28:04.217-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 56136!----QUIT----2025-02-09T02:28:04.232-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 56254!!ProfStef class methodsFor: 'nil' stamp: '2/20/2025 20:16'!goToNextLesson  self next! !!ProfStef class methodsFor: 'as yet unclassified' stamp: '2/20/2025 20:26' prior: 113103!goToNextLesson  self next! !!ProfStef class methodsFor: 'as yet unclassified' stamp: '2/21/2025 00:41' prior: 113343!goToNextLesson  self next! !!ProfStef class methodsFor: 'as yet unclassified' stamp: '2/21/2025 00:41' prior: 113583!goToNextLesson  self next! !!ProfStef class methodsFor: 'as yet unclassified' stamp: '2/21/2025 00:42' prior: 113823!goToNextLesson  self next! !ProfStef class removeSelector: #goToNextLesson!----SNAPSHOT----2025-02-22T03:15:28.377-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 56372!----SNAPSHOT----2025-02-22T03:15:28.39-05:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 57109!Trait << #HowToDebug	traits: {};	slots: {};	tag: 'Objects' ;	package: 'Kernel'!!HowToDebug methodsFor: 'tutorial' stamp: '2/24/2025 18:10'!tutorial	^ #(#useSelfHalt#examineStackTrace#changeReturnValue)! !----QUIT/NOSAVE----2025-03-12T23:26:42.116-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 57231!----QUIT/NOSAVE----2025-03-12T23:26:42.127-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 57231!----QUIT----2025-03-18T08:40:46.463-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 57231!----QUIT----2025-03-18T08:40:46.477-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 57819!----SNAPSHOT----2025-04-03T03:01:33.835-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 57937!----SNAPSHOT----2025-04-03T03:01:33.848-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 58055!----SNAPSHOT----2025-04-03T03:01:34.326-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 58177!----SNAPSHOT----2025-04-03T03:01:34.34-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 58299!----SNAPSHOT----2025-04-03T03:01:34.536-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 58421!----SNAPSHOT----2025-04-03T03:01:34.546-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 58542!----SNAPSHOT----2025-04-03T03:01:34.734-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 58664!----SNAPSHOT----2025-04-03T03:01:34.743-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 58786!----SNAPSHOT----2025-04-03T03:01:42.396-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 58908!----SNAPSHOT----2025-04-03T03:01:42.406-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 59030!----SNAPSHOT----2025-04-03T03:01:42.904-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 59152!----SNAPSHOT----2025-04-03T03:01:42.916-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 59274!----SNAPSHOT----2025-04-03T03:01:43.113-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 59396!----SNAPSHOT----2025-04-03T03:01:43.123-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 59518!----SNAPSHOT----2025-04-03T03:01:43.32-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 59640!----SNAPSHOT----2025-04-03T03:01:43.329-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 59762!----SNAPSHOT----2025-04-03T03:01:51.402-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 59883!----SNAPSHOT----2025-04-03T03:01:51.411-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 60005!----SNAPSHOT----2025-04-03T03:02:12.483-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 60127!----SNAPSHOT----2025-04-03T03:02:12.493-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 60249!----QUIT----2025-04-03T03:02:19.206-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 60371!----QUIT----2025-04-03T03:02:19.221-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 60493!----SNAPSHOT----2025-04-19T21:44:40.065-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 60611!----SNAPSHOT----2025-04-19T21:44:40.09-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 60729!----SNAPSHOT----2025-04-19T21:44:43.186-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 60851!----SNAPSHOT----2025-04-19T21:44:43.202-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 60972!!BenchRandom methodsFor: 'nil' stamp: '4/19/2025 21:45'!randomSquare: anInteger	^ self randomWithRows: anInteger columns: anInteger! !----SNAPSHOT----2025-04-19T21:45:11.196-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 61094!----SNAPSHOT----2025-04-19T21:45:11.208-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 61354!!RandomMatrix methodsFor: 'as yet unclassified' stamp: '4/19/2025 21:45' prior: 59109!makeInvertable	matrix withIndexDo: [ :row :index |		row			at: index			put: (row inject: 0 into: [ :sum :each | sum + each abs ]) ]! !----SNAPSHOT----2025-04-19T21:45:21.046-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 61476!----SNAPSHOT----2025-04-19T21:45:21.061-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 61824!!RandomMatrix methodsFor: 'generate' stamp: '4/19/2025 21:45' prior: 88179!Lcg	"|lcg |	lcg := BenchRandom new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]"	| randomArray size seed a c m currentValue rand lcg|BenchRandom class >> lcg .	^ self new initialize. 		size := 10. "Define the size of the array"	seed := 12345. "Choose an initial seed value"	a := 1103515245. "Multiplier constant"	c := 12345. "Increment constant"	m := 2 raisedTo: 31. "Modulus "	randomArray := OrderedCollection new. "Create an empty collection to store random numbers"	rand := seed. "Set the initial value to the seed"			rand := BenchRandom between: 0 and: 100.	"(1 to: 10) collect: [ :ignore | rand nextFloat ]."	1 to: size do: [ :i |		rand := a * rand + c \\ m. "Linear congruential generator formula"		randomArray add: rand / m * 100 ."Scale the result to a range between 0 and 100" ].	^ randomArray asArray "Return the array" 			! !----SNAPSHOT----2025-04-19T21:47:42.583-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 61946!----SNAPSHOT----2025-04-19T21:47:42.603-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 63027!----SNAPSHOT----2025-04-19T21:48:23.487-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 63149!----SNAPSHOT----2025-04-19T21:48:23.499-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 63271!!BenchRandom methodsFor: 'nil' stamp: '4/19/2025 21:50'!makeInvertable	| matrix |	matrix withIndexDo: [ :row :index |		row			at: index			put: (row inject: 0 into: [ :sum :each | sum + each abs ]) ]! !!BenchRandom methodsFor: 'nil' stamp: '4/19/2025 21:50'!LCG	"|lcg |	lcg := BenchRandom new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]"	| randomArray size seed a c m currentValue rand lcg|BenchRandom class >> lcg .	^ self new initialize. 		size := 10. "Define the size of the array"	seed := 12345. "Choose an initial seed value"	a := 1103515245. "Multiplier constant"	c := 12345. "Increment constant"	m := 2 raisedTo: 31. "Modulus "	randomArray := OrderedCollection new. "Create an empty collection to store random numbers"	rand := seed. "Set the initial value to the seed"			rand := BenchRandom between: 0 and: 100.	"(1 to: 10) collect: [ :ignore | rand nextFloat ]."	1 to: size do: [ :i |		rand := a * rand + c \\ m. "Linear congruential generator formula"		randomArray add: rand / m * 100 ."Scale the result to a range between 0 and 100" ].	^ randomArray asArray "Return the array" 			! !!BenchRandom methodsFor: 'as yet unclassified' stamp: '4/19/2025 23:53'!LcgFloat	"|lcg |	lcg := BenchRandom new.	^ Array rows: 10 columns: 6 tabulate: [ :i :j | random next ]"	| randomArray size seed a c m currentValue rand lcg|BenchRandom class >> lcg .	^ self new initialize. 		size := 10. "Define the size of the array"	seed := 12345. "Choose an initial seed value"	a := 1103515245. "Multiplier constant"	c := 12345. "Increment constant"	m := 2 raisedTo: 31. "Modulus "	randomArray := OrderedCollection new. "Create an empty collection to store random numbers"	rand := seed. "Set the initial value to the seed"			rand := BenchRandom between: 0 and: 100.	"(1 to: 10) collect: [ :ignore | rand nextFloat ]."	1 to: size do: [ :i |		rand := a * rand + c \\ m. "Linear congruential generator formula"		randomArray add: rand / m * 100 ."Scale the result to a range between 0 and 100" ].	^ randomArray asArray "Return the array" 			! !BenchRandom removeSelector: #LCG!RandomMatrix removeSelector: #LcgFloat!----SNAPSHOT----2025-04-20T00:07:09.76-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 63393!----SNAPSHOT----2025-04-20T00:07:09.774-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 65700!----SNAPSHOT----2025-04-20T00:07:10.256-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 65821!----SNAPSHOT----2025-04-20T00:07:10.27-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 65943!----SNAPSHOT----2025-04-20T00:07:10.472-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 66065!----SNAPSHOT----2025-04-20T00:07:10.484-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 66186!----SNAPSHOT----2025-04-20T00:10:01.048-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 66308!----SNAPSHOT----2025-04-20T00:10:01.062-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 66430!----SNAPSHOT----2025-04-20T00:10:07.023-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 66552!----SNAPSHOT----2025-04-20T00:10:07.038-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 66674!----SNAPSHOT----2025-04-20T00:10:12.901-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 66796!----SNAPSHOT----2025-04-20T00:10:12.916-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 66918!----SNAPSHOT----2025-04-20T00:11:34.557-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 67040!----SNAPSHOT----2025-04-20T00:11:34.571-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 67162!----SNAPSHOT----2025-04-20T00:12:23.923-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 67284!----SNAPSHOT----2025-04-20T00:12:23.935-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 67406!----SNAPSHOT----2025-04-20T00:12:31.951-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 67528!----SNAPSHOT----2025-04-20T00:12:31.963-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 67650!----SNAPSHOT----2025-05-01T01:39:13.108-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 67772!----SNAPSHOT----2025-05-01T01:39:13.129-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 67894!----SNAPSHOT----2025-05-01T01:39:13.614-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 68016!----SNAPSHOT----2025-05-01T01:39:13.628-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 68138!----SNAPSHOT----2025-05-01T01:39:13.883-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 68260!----SNAPSHOT----2025-05-01T01:39:13.898-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 68382!----SNAPSHOT----2025-05-01T01:39:14.136-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 68504!----SNAPSHOT----2025-05-01T01:39:14.148-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 68626!----SNAPSHOT----2025-05-01T01:39:14.369-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 68748!----SNAPSHOT----2025-05-01T01:39:14.382-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 68870!----SNAPSHOT----2025-05-01T01:40:51.339-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 68992!----SNAPSHOT----2025-05-01T01:40:51.353-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 69114!----SNAPSHOT----2025-05-01T01:40:51.841-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 69236!----SNAPSHOT----2025-05-01T01:40:51.854-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 69358!----SNAPSHOT----2025-05-01T01:40:52.072-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 69480!----SNAPSHOT----2025-05-01T01:40:52.085-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 69602!!BenchRandom methodsFor: 'nil' stamp: '5/1/2025 01:48'!createRowAndColumn	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	| random rows matrix cols|	random := Random new.	matrix := (1 to: rows) collect: [ :i |		          (1 to: cols) collect: [ :j | random next ] ].! !----QUIT----2025-05-01T02:43:02.871-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 69724!----QUIT----2025-05-01T02:43:02.885-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 70175!!BenchRandomTest methodsFor: 'running'!setUp	super setUp.	gen := BenchRandom new! !!BenchRandomTest methodsFor: 'tests'!testDistribution	| results occurrences |	1 to: 100 do: [ :i |		results := Bag new.		2000 timesRepeat: [ results add: (gen nextInteger: 100) ].		occurrences := Array new: 100 streamContents: [ :out |			               results doWithOccurrences: [ :element :occurrence |				               self assert: (element between: 1 and: 100).				               out nextPut: occurrence				               "self assert: (occurrence between: 5 and: 40)" ] ].		self assert: occurrences average equals: 2000. "20"		self assert: occurrences stdev < 10 ]! !!BenchRandomTest methodsFor: 'tests'!testNext	10000 timesRepeat: [		| next |		next := gen next.		self assert: next >= 0.		self assert: next < 1 ]! !!BenchRandom methodsFor: 'accessing'!next	^ 0.5! !!BenchRandom methodsFor: 'accessing'!nextInteger: anInteger	"Answer a random integer in the interval [1, anInteger].	Handle large numbers too (for cryptography)."	anInteger strictlyPositive ifFalse: [		self error: 'Range must be positive' ].	^ (self next * anInteger) truncated	  + 1! !----SNAPSHOT----2025-05-15T17:22:00.066-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 70293!----SNAPSHOT----2025-05-15T17:22:00.101-04:00 Pharo 13.0 - 64bit (development version, latest).image priorSource: 71592!