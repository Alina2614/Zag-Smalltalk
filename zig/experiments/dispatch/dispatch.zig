const std = @import("std");
const ee = std.testing.expectEqual;
const assert = std.debug.assert;
const print = std.debug.print;
const zag = @import("zag.zig");
const config = zag.config;
const tailCall = config.tailCall;
const trace = config.trace;
const stdCall = config.stdCall;
const checkEqual = zag.utilities.checkEqual;
const object = zag.zobject;
const Object = object.Object;
const ClassIndex = object.ClassIndex;
const Nil = object.Nil;
const NotAnObject = object.NotAnObject;
const True = object.True;
const False = object.False;
const u64_MINVAL = object.u64_MINVAL;
const indexSymbol0 = object.Object.indexSymbol0;
const indexSymbol1 = object.Object.indexSymbol1;
const heap = zag.heap;
const symbol = zag.symbol;
const Sym = symbol.symbols;
const execute = zag.execute;

const SP = execute.SP;
var stack: [11]Object = undefined;
const sp0 = @as(SP, @ptrCast(&stack[10]));
